Jeremy Jao
07.16.2014

connectSEMMED.py contains the function details()
- returns a dict to use mysql.connector to connect

selectPredicates.py
- selects the unique predicates from the SemMED db table PREDICATION 
- output:
	- allpredicates.txt
		- first line is the # of entries
		- rest is all unique predicates

the other py script is just a test to see if the connector can connect...

Potentially useful predicates (including the negative ones...):
- TREATS
- COEXISTS_WITH
- AFFECTS
- CAUSES
- USES
- PREVENTS
- INTERACTS_WITH
- COMPLICATES
- DISRUPTS
- INHIBITS
- AUGMENTS
- STIMULATES

Problems:
- tables are case sensitive!
- PREDICATION table has 15176516 entries..........
	but.... 57 unique strings...
	dunno why this inefficient... must be important though? Or maybe the dump
	severely messed up...

========================================================================
09.03.2014

List of subject/object types obtained from:
https://raw.githubusercontent.com/mengjunxie/ae-lda/master/misc/SRDEF.txt

Complete list of semantic types:
http://semanticnetwork.nlm.nih.gov/SemGroups/Papers/2003-medinfo-atm.pdf

List of drugs:
http://www.nlm.nih.gov/research/umls/sourcereleasedocs/current/RXNORM/stats.html

Subjects (goal is to get drug entities -> all RXNORM entities):
- clnd|Clinical Drug
- phsu|Pharmacologic Substance
- orch|Organic Chemical
- medd|Medical Device
- drdd|Drug Delivery Device

Objects (goal is to get health outcomes):
- bpoc|Body Part, Organ, or Organ Component
- cgab|Congenital Abnormality
- clna|Clinical Attribute
- comd|Cell or Molecular Dysfunction
- dysn|Disease or Syndrome
- enzy|Enzyme
- fndg|Finding
- ftcn|Functional Concept
- gngm|Gene or Genome
- horm|Hormone
- humn|Human
- imft|Immunologic Factor
- mobd|Mental or behavioral dysfunction
- menp|Mental Process
- nnon|Nucleic Acid, Nucleoside, etc.
- patf|Pathologic Function
- orgf|Organism Function
- sosy|Sign or Symptom
- vita|Vitamin

PREDICATES:

- CAUSES
- NEG_CAUSES

- AFFECTS
- NEG_AFFECTS

- ASSOCIATED_WITH
- NEG_ASSOCIATED_WITH

- COMPLICATES
- NEG_COMPLICATES

- DISRUPTS
- NEG_DISRUPTS

- PREDISPOSES
- NEG_PREDISPOSES

- TREATS
- NEG_TREATS

- INHIBITS
- NEG_INHIBITS

- DISRUPTS
- NEG_DISRUPTS

- STIMULATES
- NEG_STIMULATES

------------------------------------------------------------------------
09.04.2014

selectTriplesPlusSentence.py
============================

Selects concept triples with the sentences from which they were derived. 
The output semmedTriplesPlusSentence.tsv has a way to perhaps create a way
to make a simple drilldown and summary case usage.

Prerequisites:

The UMLS CUI to RxNorm, MeSH, SNOMED, and MedDRA Conversion was done with 
UMLS_CUIs.py class which takes the TRIADS data from Dr. Boyce's server, 
process it into its own class (well documented), processed, and then 
pickled using cPickle (in its main). This had to be done because

-File prerequisites:
    - UMLS_CUIs.py (python UMLS_CUIs.py)
    - umlsStructure.cPickle - UMLS_CUIs class postprocessed file created
    from above python class file
    - can only be run on Dr. Boyce's server

Steps that the program does:

1. Query the SemMED DB from the OHDSI dev server
2. open the UMLS_CUIs pickle
3. writes the results via this in a TSV semmedTriplesPlusSentence.tsv:
['pmid', 'predicate', 'drug UMLS CUI', 'drug RxNorm', 'drug MeSH', 'drug Preferred Term', 'drug UMLS entity type', 'HOI UMLS CUI', 'HOI SNOMED', 'HOI MedDRA', 'HOI MeSH', 'HOI Preferred Term', 'HOI UMLS entity type', 'sentence', 'sentence location', 'sentence type']
- explanation of columns:
    - pmid: the PMID
    - predicate: the predicate used to associate the subject and object
    - Drug UMLS CUI: UMLS CUI of the subject (drug)
    - drug RxNorm: RxNorm drug CUI
    - drug MeSH: MeSH drug CUI
    - drug Preferred Term: name of the drug from SEMMED
    - drug UMLS entity type: name of the drug's UMLS Entity Type
    - HOI UMLS CUI: Health Outcome of Interest UMLS CUI
    - HOI SNOMED: Health Outcome of Interest SNOMED CUI
    - HOI MedDRA: Health Outcome of Interest MedDRA CUI
    - HOI MeSH: Health Outcome of Interest MeSH CUI
    - HOI Preferred Term: name of the HOI from SEMMED
    - HOI entity type: name of the HOI's UMLS Entity type
    - sentence: the actual sentence of the finding
    - sentence location: number that represents the location of the sentence found from its source from PM
    - sentence type: sentence was extracted from this type
    
Take Note:
- SEMMED supplies the UMLS CUI
- I used the UMLS CUI to get the RxNorm, MeSH, MedDRA, and SNOMED CUIs
- However, as of right now, there is a one-to-many mapping between UMLS and SNOMED+MEDDRA
so what I did is I put the CUIs with that mapping pipe-delimited inside each column.
