--------------------------------------------------------------------
-- Generate Laertes Summary for just OMOP identified positive and negative control pairs for DRUGS and HOIS
--
-- Authors: Richard D Boyce, Erica Voss
-- 2014/2015
--------------------------------------------------------------------

\echo 'Dropping tables and views'
DROP TABLE IF EXISTS LAERTES_SUMMARY_FILTERED;

\echo 'Create tables'
CREATE TABLE LAERTES_SUMMARY_FILTERED (
	id serial 			PRIMARY KEY,
	REPORT_ORDER			INTEGER,
	REPORT_NAME			TEXT,
	HOI_ID				INTEGER,
	HOI				TEXT,
	INGREDIENT_ID			INTEGER,
	INGREDIENT			TEXT,
	GROUND_TRUTH			INTEGER,
	CT_COUNT			NUMERIC,
	CASE_COUNT			NUMERIC,
	OTHER_COUNT			NUMERIC,
	SPLICER_COUNT			NUMERIC,
	EU_SPC_COUNT			NUMERIC,
	SEMMEDDB_CT_COUNT		NUMERIC,
	SEMMEDDB_CASE_COUNT		NUMERIC,
	SEMMEDDB_NEG_CT_COUNT		NUMERIC,
	SEMMEDDB_NEG_CASE_COUNT		NUMERIC,
	EB05				NUMERIC,
	EBGM				NUMERIC,
	AERS_REPORT_COUNT		NUMERIC
);


\echo 'Alter statements'
ALTER TABLE LAERTES_SUMMARY_FILTERED 
  OWNER TO rich;
GRANT ALL ON TABLE LAERTES_SUMMARY_FILTERED  TO public;
GRANT ALL ON TABLE LAERTES_SUMMARY_FILTERED  TO ohdsi;
GRANT ALL ON TABLE LAERTES_SUMMARY_FILTERED  TO administrator;
GRANT ALL ON TABLE LAERTES_SUMMARY_FILTERED  TO developer;

WITH CTE_UNIVERSE AS (
	SELECT h.HOI_CONCEPT_ID, h.HOI_CONCEPT_NAME, h.CONCEPT_ID, h.DESCRIPTION, hd.DRUG_CONCEPT_ID, hd.DRUG_CONCEPT_NAME, hd.GROUND_TRUTH
	FROM LU_HOI_DEF h
		JOIN LU_DRUG_HOI_DEF hd
			ON hd.HOI_CONCEPT_ID = h.HOI_CONCEPT_ID
),
CTE_TRANSLATE AS (
	SELECT v.*,
		c.CONCEPT_ID AS INGREDIENT_ID, 
		c.CONCEPT_NAME AS INGREDIENT_NAME,
		CASE WHEN c.CONCEPT_ID IS NULL THEN 0 ELSE 1 END INGREDIENT_EXISTS,
		c2.CONCEPT_ID AS CLINICAL_DRUG_ID, 
		c2.CONCEPT_NAME AS CLINICAL_DRUG_NAME,
		CASE WHEN c2.CONCEPT_ID IS NULL THEN 0 ELSE 1 END CLINICAL_DRUG_EXISTS 
	FROM drug_hoi_evidence_view V
		/*ROLL DOWN TO INGREDIENTS*/
		LEFT OUTER JOIN CONCEPT_ANCESTOR ca
			ON ca.DESCENDANT_CONCEPT_ID = v.DRUG
			AND ca.ANCESTOR_CONCEPT_ID IN (
				SELECT DISTINCT CONCEPT_ID
				FROM CONCEPT
				WHERE VOCABULARY_ID = 'RxNorm'
				AND CONCEPT_CLASS_ID = 'Ingredient'
				AND INVALID_REASON IS NULL
			)
		LEFT OUTER JOIN CONCEPT c
			ON c.CONCEPT_ID = ca.ANCESTOR_CONCEPT_ID
		/*ROLL UP TO CLINICAL DRUG*/
		LEFT OUTER JOIN CONCEPT_ANCESTOR ca2
			ON ca2.DESCENDANT_CONCEPT_ID = v.DRUG
			AND ca2.ANCESTOR_CONCEPT_ID IN (
				SELECT DISTINCT CONCEPT_ID
				FROM CONCEPT
				WHERE VOCABULARY_ID = 'RxNorm'
				AND CONCEPT_CLASS_ID = 'Clinical Drug'
				AND INVALID_REASON IS NULL
			)
		LEFT OUTER JOIN CONCEPT c2
			ON c2.CONCEPT_ID = ca2.ANCESTOR_CONCEPT_ID
),
CTE_UNIVERSE_SUMMARY AS (
	SELECT *
	FROM CTE_UNIVERSE u
		LEFT OUTER JOIN CTE_TRANSLATE t
			ON t.INGREDIENT_ID = u.DRUG_CONCEPT_ID
			AND t.HOI = u.CONCEPT_ID
),
CTE_REPORT_2 AS (
	SELECT 2 AS REPORT_ORDER, 
		CAST('Stratified by ingredient and HOI' AS text) as report_name,
		HOI_CONCEPT_ID as hoi_id, 
		HOI_CONCEPT_NAME as hoi, 
		DRUG_CONCEPT_ID AS INGREDIENT_ID, 
		DRUG_CONCEPT_NAME AS INGREDIENT,
		GROUND_TRUTH,
		sum(medline_mesh_clin_trial_count) as ct_count, -- Ingredient-based
		sum(medline_mesh_case_report_count) as case_count, -- Ingredient-based
		sum(medline_mesh_other_count) as other_count, -- Ingredient-based
		sum(spl_splicer_count) as splicer_count, -- Drug-based
		sum(spl_eu_spc_count) AS eu_spc_count,
		sum(medline_semmed_clin_trial_count) AS SemMedDB_CT_COUNT,
		sum(medline_semmed_case_report_count) AS SemMedDB_CASE_COUNT,
		sum(neg_medline_semmed_clin_trial_count) AS SemMedDB_Neg_CT_COUNT,
		sum(neg_medline_semmed_case_report_count) AS SemMedDB_Neg_CASE_COUNT,
		avg(aers_eb05) as eb05, -- Ingredient-based
		avg(aers_ebgm) as ebgm, -- Ingredient-based
		sum(aers_report_count) as aers_report_count-- Ingredient-based
	FROM CTE_UNIVERSE_SUMMARY
	GROUP BY HOI_CONCEPT_ID, HOI_CONCEPT_NAME,GROUND_TRUTH, DRUG_CONCEPT_ID, DRUG_CONCEPT_NAME
)
INSERT INTO LAERTES_SUMMARY_FILTERED (REPORT_ORDER, REPORT_NAME, HOI_ID, HOI, INGREDIENT_ID, INGREDIENT, GROUND_TRUTH,
	CT_COUNT, CASE_COUNT, OTHER_COUNT, SPLICER_COUNT, EU_SPC_COUNT, SEMMEDDB_CT_COUNT, SEMMEDDB_CASE_COUNT, SEMMEDDB_NEG_CT_COUNT,
	SEMMEDDB_NEG_CASE_COUNT, EB05, EBGM, AERS_REPORT_COUNT)
SELECT *
FROM CTE_REPORT_2
ORDER BY HOI, GROUND_TRUTH DESC, INGREDIENT;

COMMIT;
