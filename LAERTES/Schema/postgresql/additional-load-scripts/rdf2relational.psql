--------------------------------------------------------------------
-- Initialization script to add to the LAERTES relational model (extension to the OHDSI Standard Vocabulary)
-- Adds tables which originally appeared as RDF
--
-- Authors: Charles Kronk, Richard Boyce
-- 2015 - 2016
--
-- 1) Create CSV files to load (see below, this has to be done from the command line).
-- 2) Load this script
--
--- (DEVELOPMENT --- NOTE: YOU HAVE TO CHANGE TO TABLE PERMISSIONS STATEMENTS FIRST -- SEE 'Altering table permissions' BELOW)
-- Within this folder run:
--    nohup psql -U <user name> -h 127.0.0.1 -W -d laertes_cdm < rdf2relational.psql

--- (RELEASE)
-- ssh to the OHDSI dev server, change to the /mnt/vol1/inbound folder
--    and run:
--    nohup psql -U <user name> -h 127.0.0.1 -W -d vocabularyv5 < rdf2relational.psql
--
--
--
----------------------------

----------------------------
-- SPARQL QUERIES TO RUN FROM THE COMMAND LINE
----------------------------
-- 1) Copy each query into /tmp/test.sparql and the run the following two commands:
--
--   $ isql-vt -H localhost -S 1111  -U <user name> -P <password> errors=stdout < /tmp/test.sparql > /tmp/test.out
--
--   $ egrep "^http.*|^urn.*" /tmp/test.out | sed 's/\s\s\+/\t/g'  > <NAME OF FILE (SEE BELOW)>

---------------------------------
-- QUERY 1 - to adr-annotation.dsv
--
-- SPARQL PREFIX ohdsi:<http://purl.org/net/ohdsi#> PREFIX oa:<http://www.w3.org/ns/oa#>  SELECT * WHERE {    ?an a oa:DataAnnotation;     oa:annotatedAt ?annotatedAt;     oa:annotatedBy ?annotatedBy;     oa:motivatedBy ?motivatedBy;     oa:hasTarget ?target;     oa:hasBody ?body.  };

----------------------------

-- QUERY 2 - to adr-body.dsv
--
-- SPARQL PREFIX ohdsi:<http://purl.org/net/ohdsi#> PREFIX oa:<http://www.w3.org/ns/oa#>  SELECT ?body ?label ?description if(bound(?standardDrug),?standardDrug,ohdsi:0) as ?sdrug if(bound(?standardHoi),?standardHoi,ohdsi:0) as ?shoi WHERE {   ?an oa:hasBody ?body. ?body rdfs:label ?label; dcterms:description ?description. OPTIONAL {?body ohdsi:ImedsDrug ?standardDrug.}  OPTIONAL {?body ohdsi:ImedsHoi ?standardHoi.} };

----------------------------

-- QUERY 3 -- to adr-target.dsv
--
-- SPARQL PREFIX ohdsi:<http://purl.org/net/ohdsi#> PREFIX oa:<http://www.w3.org/ns/oa#>  SELECT ?target ?source WHERE {   ?an oa:hasTarget ?target.    ?target oa:hasSource ?source. };

----------------------------

\echo 'Setting up transaction'
START TRANSACTION;
SET standard_conforming_strings=off;
SET escape_string_warning=off;
SET CONSTRAINTS ALL DEFERRED;

\echo 'Dropping tables and views'
DROP TABLE IF EXISTS adr_annotation CASCADE;
DROP TABLE IF EXISTS adr_body CASCADE;
DROP TABLE IF EXISTS target CASCADE;
DROP TABLE IF EXISTS selector CASCADE;

COMMIT;

\echo 'Creating Open Data Annotation (http://www.openannotation.org/spec/core/) tables'
START TRANSACTION;
CREATE TABLE target (
    target_uid serial,
    target_item text UNIQUE,
    has_source text,
    has_selector integer,
    PRIMARY KEY (target_uid)
);

CREATE TABLE adr_body (
    adr_body_uid serial,
    adr_body_item text UNIQUE,
    adr_body_label text,
    adr_body_description text,
    rxnorm_drug text,
    standard_drug text,
    standard_hoi text,
    PRIMARY KEY (adr_body_uid)
);

CREATE TABLE adr_annotation (
    adr_annotation_uid serial,
    adr_annotation_item text,
    annotated_at text,
    annotated_by text,
    motivated_by text,
    has_target text REFERENCES target(target_item), 
    has_body text REFERENCES adr_body(adr_body_item), 
    PRIMARY KEY (adr_annotation_uid)
);

--- TODO: if needed, we can load selectors later
-- CREATE TABLE selector (
--     selector_uid serial,
--     spl_section text,
--     selector_type text,
--     PRIMARY KEY (selector_uid)
-- );

COMMIT;

\echo 'Altering table permissions '
START TRANSACTION;
---- !!!! UNCOMMENT THESE PERMISSIONS FOR RELEASE !!!! 
-- ALTER TABLE adr_annotation
--   OWNER TO rich;
-- GRANT ALL ON TABLE adr_annotation TO public;
-- GRANT ALL ON TABLE adr_annotation TO ohdsi;
-- GRANT ALL ON TABLE adr_annotation TO developer;
-- GRANT ALL ON TABLE adr_annotation TO administrator;

-- ALTER TABLE adr_body
--   OWNER TO rich;
-- GRANT ALL ON TABLE adr_body TO public;
-- GRANT ALL ON TABLE adr_body TO ohdsi;
-- GRANT ALL ON TABLE adr_body TO developer;
-- GRANT ALL ON TABLE adr_body TO administrator;

-- ALTER TABLE target
--   OWNER TO rich;
-- GRANT ALL ON TABLE target TO public;
-- GRANT ALL ON TABLE target TO ohdsi;
-- GRANT ALL ON TABLE target TO developer;
-- GRANT ALL ON TABLE target TO administrator;

-- ALTER TABLE selector
--   OWNER TO rich;
-- GRANT ALL ON TABLE selector TO public;
-- GRANT ALL ON TABLE selector TO ohdsi;
-- GRANT ALL ON TABLE selector TO developer;
-- GRANT ALL ON TABLE selector TO administrator;

---- !!!! UNCOMMENT THESE PERMISSIONS FOR RELEASE !!!! 
ALTER TABLE adr_annotation
  OWNER TO rdb20;

ALTER TABLE adr_body
  OWNER TO rdb20;

ALTER TABLE target
  OWNER TO rdb20;

-- ALTER TABLE selector
--   OWNER TO rdb20;

COMMIT;

\echo 'inserting data for adr_body'
START TRANSACTION;
\COPY adr_body (adr_body_item, adr_body_label, adr_body_description, standard_drug, standard_hoi) FROM 'adr-body.dsv' DELIMITER '\t' CSV;
COMMIT;

\echo 'inserting data for adr_target'
START TRANSACTION;
\COPY target (target_item,has_source) FROM 'adr-target.dsv' DELIMITER '\t' CSV;
COMMIT;

\echo 'inserting data for adr_annotation'
START TRANSACTION;
\COPY adr_annotation (adr_annotation_item,annotated_at,annotated_by,motivated_by,has_target,has_body) FROM './adr-annotation.dsv' DELIMITER '\t' CSV;
COMMIT;


\echo 'NOTE: not currently inserting data for table selector'

\echo 'All done folks!'
