/*******************************
PREP WORK - (A) Condition Lookup
********************************/
DROP TABLE TEMP_LU_CONDITIONS;
SELECT DISTINCT HOI AS CONDITION_CONCEPT_ID, SNOMED_HOI AS CONDITION_CONCEPT_NAME, EVIDENCE_TYPE 
INTO TABLE TEMP_LU_CONDITIONS
FROM DRUG_HOI_EVIDENCE e
	JOIN DRUG_HOI_RELATIONSHIP r
		ON r.ID = e.DRUG_HOI_RELATIONSHIP
ORDER BY HOI, SNOMED_HOI;

CREATE INDEX IDX_TEMP_LU_CONDITIONS_CONDITION_CONCEPT_ID ON TEMP_LU_CONDITIONS (CONDITION_CONCEPT_ID);
ALTER TABLE TEMP_LU_CONDITIONS CLUSTER ON IDX_TEMP_LU_CONDITIONS_CONDITION_CONCEPT_ID;

--TIME: 3 min

DROP TABLE TEMP_LU_CONDITION_CHILDREN;
SELECT DISTINCT CONDITION_CONCEPT_ID, CONDITION_CONCEPT_NAME, c1.CONCEPT_ID, c1.CONCEPT_NAME
INTO TABLE TEMP_LU_CONDITION_CHILDREN 
FROM TEMP_LU_CONDITIONS c
	JOIN CONCEPT_ANCESTOR ca
		ON ca.ANCESTOR_CONCEPT_ID = c.CONDITION_CONCEPT_ID
	JOIN CONCEPT c1
		ON c1.CONCEPT_ID = ca.DESCENDANT_CONCEPT_ID
		AND c1.VOCABULARY_ID = 'SNOMED'
		AND c1.INVALID_REASON IS NULL; 

/*NOTE - there is a Acute Liver Injury hack that is required for full data set*/
INSERT INTO TEMP_LU_CONDITION_CHILDREN  (CONDITION_CONCEPT_ID, CONDITION_CONCEPT_NAME, CONCEPT_ID, CONCEPT_NAME) VALUES (4026032,'Acute hepatic failure',4340942,'Drug-induced hepatitis');

CREATE INDEX IDX_TEMP_LU_CONDITION_CHILDREN_CONDITION_CONCEPT_ID ON TEMP_LU_CONDITION_CHILDREN (CONDITION_CONCEPT_ID);
ALTER TABLE TEMP_LU_CONDITION_CHILDREN CLUSTER ON IDX_TEMP_LU_CONDITION_CHILDREN_CONDITION_CONCEPT_ID;


--TIME: 30 m

/*******************************
PREP WORK - (B-1) Define Ingredient Universe
********************************/

--Get DRUG_HOI_EVIDENCE with ingredients

DROP TABLE TEMP_DRUG_HOI_EVIDENCE_INGREDIENT;

SELECT r.HOI AS CONDITION_CONCEPT_ID, r.SNOMED_HOI AS CONDITION_CONCEPT_NAME,
	r.DRUG AS DRUG_CONCEPT_ID, r.RXNORM_DRUG AS DRUG_CONCEPT_NAME,  
	c.CONCEPT_ID AS INGREDIENT_CONCEPT_ID, c.CONCEPT_NAME AS INGREDIENT_CONCEPT_NAME,
	CASE WHEN c.CONCEPT_ID IS NULL THEN 0 ELSE 1 END INGREDIENT_EXISTS, 
	e.EVIDENCE_TYPE, e.SUPPORTS, e.EVIDENCE_SOURCE_CODE_ID, e.STATISTIC_VALUE, e.EVIDENCE_LINKOUT, e.STATISTIC_TYPE
INTO TEMP_DRUG_HOI_EVIDENCE_INGREDIENT
FROM DRUG_HOI_EVIDENCE e
	JOIN DRUG_HOI_RELATIONSHIP r
		ON r.ID = e.DRUG_HOI_RELATIONSHIP
	/*ROLL DOWN TO INGREDIENTS*/
	JOIN CONCEPT_ANCESTOR ca
		ON ca.DESCENDANT_CONCEPT_ID = r.DRUG
		AND ca.ANCESTOR_CONCEPT_ID IN (
			SELECT DISTINCT CONCEPT_ID
			FROM CONCEPT
			WHERE VOCABULARY_ID = 'RxNorm'
			AND CONCEPT_CLASS_ID = 'Ingredient'
			AND INVALID_REASON IS NULL
		)
	LEFT OUTER JOIN CONCEPT c
		ON c.CONCEPT_ID = ca.ANCESTOR_CONCEPT_ID;


CREATE INDEX IDX_TEMP_DRUG_HOI_EVIDENCE_INGREDIENT_CONCEPT_ID ON TEMP_DRUG_HOI_EVIDENCE_INGREDIENT (CONDITION_CONCEPT_ID, INGREDIENT_CONCEPT_ID);
ALTER TABLE TEMP_DRUG_HOI_EVIDENCE_INGREDIENT CLUSTER ON IDX_TEMP_DRUG_HOI_EVIDENCE_INGREDIENT_CONCEPT_ID;


--TIME:  43 s

--Use this to define LAERTES_DRUG_UNIVERSE

DROP TABLE TEMP_LAERTES_DRUG_UNIVERSE;

WITH CTE_ENOUGH_DATA AS (
	SELECT DISTINCT INGREDIENT_CONCEPT_ID
	FROM TEMP_DRUG_HOI_EVIDENCE_INGREDIENT
	WHERE INGREDIENT_CONCEPT_ID IN (
		SELECT DISTINCT INGREDIENT_CONCEPT_ID
		FROM TEMP_DRUG_HOI_EVIDENCE_INGREDIENT
		WHERE EVIDENCE_TYPE IN (
			'aers_prr','aers_report_count'
		)
	)
	AND INGREDIENT_CONCEPT_ID IN (
		SELECT DISTINCT INGREDIENT_CONCEPT_ID
		FROM TEMP_DRUG_HOI_EVIDENCE_INGREDIENT
		WHERE EVIDENCE_TYPE IN (
			'MEDLINE_MeSH_ClinTrial','MEDLINE_MeSH_CR','MEDLINE_MeSH_Other','MEDLINE_SemMedDB_ClinTrial','MEDLINE_SemMedDB_CR','MEDLINE_SemMedDB_Other','CTD_ChemicalDisease'
		)
	)
	AND INGREDIENT_CONCEPT_ID IN (
		SELECT DISTINCT INGREDIENT_CONCEPT_ID
		FROM TEMP_DRUG_HOI_EVIDENCE_INGREDIENT
		WHERE EVIDENCE_TYPE IN (
			'SPL_EU_SPC','SPL_SPLICER_ADR'
		)
	)
)
SELECT du.*
INTO TABLE TEMP_LAERTES_DRUG_UNIVERSE
FROM TEMP_DRUG_HOI_EVIDENCE_INGREDIENT du
	JOIN CTE_ENOUGH_DATA ed
		ON ed.INGREDIENT_CONCEPT_ID = du.INGREDIENT_CONCEPT_ID;

CREATE INDEX IDX_TEMP_LAERTES_DRUG_UNIVERSE_INGREDIENT_CONCEPT_ID ON TEMP_LAERTES_DRUG_UNIVERSE (INGREDIENT_CONCEPT_ID);
ALTER TABLE TEMP_LAERTES_DRUG_UNIVERSE CLUSTER ON IDX_TEMP_LAERTES_DRUG_UNIVERSE_INGREDIENT_CONCEPT_ID;

--TIME:  ? (not long)

/*******************************
PREP WORK - (B-2) Define Condition Universe
********************************/
DROP TABLE TEMP_LAERTES_CONDITION_UNIVERSE;

WITH CTE_TOTAL_CONDITIONS AS (
	SELECT DISTINCT HOI AS CONDITION_CONCEPT_ID, SNOMED_HOI AS CONDITION_CONCEPT_NAME, EVIDENCE_TYPE 
	FROM DRUG_HOI_EVIDENCE e
		JOIN DRUG_HOI_RELATIONSHIP r
			ON r.ID = e.DRUG_HOI_RELATIONSHIP
),
CTE_TEST_EVIDENCE AS (
	SELECT DISTINCT c.CONDITION_CONCEPT_ID, c.CONDITION_CONCEPT_NAME, 
		MAX(CASE WHEN c1.CONDITION_CONCEPT_ID IS NULL THEN 0 ELSE 1 END) AS AERS_EVIDENCE, 
		MAX(CASE WHEN c2.CONDITION_CONCEPT_ID IS NULL THEN 0 ELSE 1 END) AS MEDLINE_EVIDENCE,
		MAX(CASE WHEN c3.CONDITION_CONCEPT_ID IS NULL THEN 0 ELSE 1 END) AS PL_EVIDENCE
	FROM CTE_TOTAL_CONDITIONS c
		LEFT OUTER JOIN EV_CONDITIONS_CHILDREN cc
			ON cc.CONDITION_CONCEPT_ID = c.CONDITION_CONCEPT_ID
		LEFT OUTER JOIN CTE_TOTAL_CONDITIONS c1
			ON c1.CONDITION_CONCEPT_ID = cc.CONCEPT_ID
			AND c1.EVIDENCE_TYPE IN (
				'aers_prr','aers_report_count'
			)
		LEFT OUTER JOIN CTE_TOTAL_CONDITIONS c2
			ON c2.CONDITION_CONCEPT_ID = cc.CONCEPT_ID
			AND c2.EVIDENCE_TYPE IN (
				'MEDLINE_MeSH_ClinTrial','MEDLINE_MeSH_CR','MEDLINE_MeSH_Other','MEDLINE_SemMedDB_ClinTrial','MEDLINE_SemMedDB_CR','MEDLINE_SemMedDB_Other','CTD_ChemicalDisease'
			)
		LEFT OUTER JOIN CTE_TOTAL_CONDITIONS c3
			ON c3.CONDITION_CONCEPT_ID = cc.CONCEPT_ID
			AND c3.EVIDENCE_TYPE IN (
				'SPL_EU_SPC','SPL_SPLICER_ADR'
			)
	GROUP BY c.CONDITION_CONCEPT_ID, c.CONDITION_CONCEPT_NAME
)
SELECT DISTINCT CONDITION_CONCEPT_ID, CONDITION_CONCEPT_NAME
INTO TEMP TABLE TEMP_LAERTES_CONDITION_UNIVERSE
FROM CTE_TEST_EVIDENCE
WHERE AERS_EVIDENCE = 1
AND MEDLINE_EVIDENCE = 1
AND PL_EVIDENCE = 1
ORDER BY CONDITION_CONCEPT_ID;

CREATE INDEX IDX_TEMP_LAERTES_CONDITION_UNIVERSE_CONDITION_CONCEPT_ID ON TEMP_LAERTES_CONDITION_UNIVERSE (CONDITION_CONCEPT_ID);
ALTER TABLE TEMP_LAERTES_CONDITION_UNIVERSE CLUSTER ON IDX_TEMP_LAERTES_CONDITION_UNIVERSE_CONDITION_CONCEPT_ID;

/*******************************
SUMMARIZE EVIDENCE 
********************************/
DROP TABLE PENELOPE_LAERTES_UNIVERSE;

WITH CTE_FILTER_DATA_TO_UNIVERSE AS (
	SELECT e.*, 
		c.CONCEPT_ID AS INGREDIENT_CONCEPT_ID, c.CONCEPT_NAME AS INGREDIENT_CONCEPT_NAME,
		cc.CONDITION_CONCEPT_ID, cc.CONDITION_CONCEPT_NAME
	FROM DRUG_HOI_EVIDENCE e
		JOIN DRUG_HOI_RELATIONSHIP r
			ON r.ID = e.DRUG_HOI_RELATIONSHIP
			/*ROLL DOWN TO INGREDIENTS*/
		JOIN CONCEPT_ANCESTOR ca
			ON ca.DESCENDANT_CONCEPT_ID = r.DRUG
			AND ca.ANCESTOR_CONCEPT_ID IN (
				SELECT DISTINCT CONCEPT_ID
				FROM CONCEPT
				WHERE VOCABULARY_ID = 'RxNorm'
				AND CONCEPT_CLASS_ID = 'Ingredient'
				AND INVALID_REASON IS NULL
			)
		JOIN CONCEPT c
			ON c.CONCEPT_ID = ca.ANCESTOR_CONCEPT_ID
		JOIN TEMP_LU_CONDITION_CHILDREN cc
			ON cc.CONCEPT_ID = r.HOI
)
SELECT row_number() OVER() AS ID, CONDITION_CONCEPT_ID, CONDITION_CONCEPT_NAME, INGREDIENT_CONCEPT_ID, INGREDIENT_CONCEPT_NAME, 
	EVIDENCE_TYPE, SUPPORTS, 
	CASE 
		WHEN EVIDENCE_TYPE IN ('MEDLINE_MeSH_ClinTrial','MEDLINE_MeSH_CR','MEDLINE_MeSH_Other','MEDLINE_SemMedDB_ClinTrial','MEDLINE_SemMedDB_CR','MEDLINE_SemMedDB_Other','CTD_ChemicalDisease','SPL_EU_SPC','SPL_SPLICER_ADR','aers_report_count') THEN SUM(STATISTIC_VALUE) 
		WHEN EVIDENCE_TYPE IN ('aers_prr') THEN EXP(AVG(LOG(STATISTIC_VALUE+1)))-1
		ELSE NULL
	END AS STATISTIC_VALUE, 
	STRING_AGG(EVIDENCE_LINKOUT, '|') AS EVIDENCE_LINKOUTS
INTO TABLE PENELOPE_LAERTES_UNIVERSE
FROM CTE_FILTER_DATA_TO_UNIVERSE
WHERE CONDITION_CONCEPT_ID IN (
	/*KEEP TO CONDITION UNIVERSE*/
	SELECT DISTINCT CONDITION_CONCEPT_ID FROM TEMP_LAERTES_CONDITION_UNIVERSE
)
AND INGREDIENT_CONCEPT_ID IN (
	/*KEEP TO CONDITION UNIVERSE*/
	SELECT DISTINCT INGREDIENT_CONCEPT_ID FROM TEMP_LAERTES_DRUG_UNIVERSE
)
GROUP BY CONDITION_CONCEPT_ID, CONDITION_CONCEPT_NAME, INGREDIENT_CONCEPT_ID, INGREDIENT_CONCEPT_NAME,EVIDENCE_TYPE, SUPPORTS
ORDER BY CONDITION_CONCEPT_ID, INGREDIENT_CONCEPT_ID, EVIDENCE_TYPE;

CREATE INDEX IDX_PENELOPE_LAERTES_UNIVERSE_CONDITION_CONCEPT_ID ON PENELOPE_LAERTES_UNIVERSE (CONDITION_CONCEPT_ID);
ALTER TABLE PENELOPE_LAERTES_UNIVERSE CLUSTER ON IDX_PENELOPE_LAERTES_UNIVERSE_CONDITION_CONCEPT_ID;

CREATE INDEX IDX_PENELOPE_LAERTES_UNIVERSE_INGREDIENT_CONCEPT_ID ON PENELOPE_LAERTES_UNIVERSE (INGREDIENT_CONCEPT_ID);
ALTER TABLE PENELOPE_LAERTES_UNIVERSE CLUSTER ON IDX_PENELOPE_LAERTES_UNIVERSE_INGREDIENT_CONCEPT_ID;


GRANT ALL ON TABLE PENELOPE_LAERTES_UNIVERSE TO public;
GRANT ALL ON TABLE PENELOPE_LAERTES_UNIVERSE TO ohdsi;
GRANT ALL ON TABLE PENELOPE_LAERTES_UNIVERSE TO developer;
GRANT ALL ON TABLE PENELOPE_LAERTES_UNIVERSE TO administrator;

