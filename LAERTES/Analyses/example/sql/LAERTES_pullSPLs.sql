WITH CTE_FILTER_DATA_TO_UNIVERSE AS (
	SELECT e.*,
		c.CONCEPT_ID AS INGREDIENT_CONCEPT_ID, c.CONCEPT_NAME AS INGREDIENT_CONCEPT_NAME,
		cc.CONDITION_CONCEPT_ID, cc.CONDITION_CONCEPT_NAME,
		CASE WHEN cc.CONDITION_CONCEPT_ID = r.HOI THEN 1 ELSE 0 END AS CONDITION_ORIGINAL_MAPPING
	FROM DRUG_HOI_EVIDENCE e
		JOIN DRUG_HOI_RELATIONSHIP r
			ON r.ID = e.DRUG_HOI_RELATIONSHIP
			/*ROLL DOWN TO INGREDIENTS*/
		JOIN CONCEPT_ANCESTOR ca
			ON ca.DESCENDANT_CONCEPT_ID = r.DRUG
			AND ca.ANCESTOR_CONCEPT_ID IN (
				SELECT DISTINCT CONCEPT_ID
				FROM CONCEPT
				WHERE VOCABULARY_ID = 'RxNorm'
				AND CONCEPT_CLASS_ID = 'Ingredient'
				AND INVALID_REASON IS NULL
			)
		JOIN CONCEPT c
			ON c.CONCEPT_ID = ca.ANCESTOR_CONCEPT_ID
		JOIN LU_CONDITIONS_CHILDREN cc
			ON cc.CONCEPT_ID = r.HOI
		WHERE EVIDENCE_TYPE = 'SPL_SPLICER_ADR'
)
SELECT CONDITION_CONCEPT_ID, CONDITION_CONCEPT_NAME, INGREDIENT_CONCEPT_ID, INGREDIENT_CONCEPT_NAME,
	EVIDENCE_TYPE, SUPPORTS,
	CASE
		WHEN EVIDENCE_TYPE IN ('MEDLINE_MeSH_ClinTrial','MEDLINE_MeSH_CR','MEDLINE_MeSH_Other','MEDLINE_SemMedDB_ClinTrial','MEDLINE_SemMedDB_CR','MEDLINE_SemMedDB_Other','SPL_EU_SPC','SPL_SPLICER_ADR','aers_report_count') THEN SUM(STATISTIC_VALUE)
		WHEN EVIDENCE_TYPE IN ('aers_report_prr') THEN EXP(AVG(LN(STATISTIC_VALUE)))
		ELSE NULL
	END AS STATISTIC_VALUE,/*,
	STRING_AGG(EVIDENCE_LINKOUT, '|') AS EVIDENCE_LINKOUTS*/
	CONDITION_ORIGINAL_MAPPING
FROM CTE_FILTER_DATA_TO_UNIVERSE
GROUP BY CONDITION_CONCEPT_ID, CONDITION_CONCEPT_NAME, INGREDIENT_CONCEPT_ID, INGREDIENT_CONCEPT_NAME,EVIDENCE_TYPE, SUPPORTS, CONDITION_ORIGINAL_MAPPING
ORDER BY CONDITION_CONCEPT_ID, INGREDIENT_CONCEPT_ID, EVIDENCE_TYPE;
